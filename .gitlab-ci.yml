image: alpine:latest

stages:
  - build-test-deploy

build:
  image: golang:latest
  stage: build-test-deploy
  before_script:
    - apt update
    - apt install zip -y
  script:
    - ./scripts/build.sh
  artifacts:
    expire_in: 1 week
    paths:
      - internal/app/*/*.zip

build-prod:
  image: golang:latest
  stage: build-test-deploy
  variables:
    ENV: production
  needs:
    - unit-test
    - acceptance-test
  before_script:
    - apt update
    - apt install zip -y
  script:
    - ./scripts/build.sh
  artifacts:
    expire_in: 1 week
    paths:
      - internal/app/*/*.zip

unit-test:
  image: golang:latest
  stage: build-test-deploy
  before_script:
    - go install gotest.tools/gotestsum@latest
  script:
    - gotestsum --junitfile report.xml --format testname
  artifacts:
    when: always
    reports:
      junit: report.xml

acceptance-test:
  image: docker:24.0.5
  stage: build-test-deploy
  variables:
    ENV: local
    AWS_ACCESS_KEY_ID: test
    AWS_SECRET_ACCESS_KEY: test
    CDK_DEPLOY_ACCOUNT: 000000000000
    CDK_DEPLOY_REGION: eu-west-1
    AWS_DEFAULT_REGION: eu-west-1
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    LOCALSTACK_HOSTNAME: localhost.localstack.cloud
    HOSTNAME_EXTERNAL: localhost.localstack.cloud
  needs:
    - build
  services:
    - name: docker:24.0.5-dind
      alias: docker
      command: ["--tls=false"]
  before_script:
    - apk update
    - apk add --update gcc musl-dev linux-headers py3-pip python3 python3-dev npm go
    - npm install -g aws-cdk-local aws-cdk
    - python3 -m pip install localstack awscli
  script:
    - sleep 30
    - dind_ip="$(getent hosts docker | cut -d' ' -f1)"
    - echo "${dind_ip} localhost.localstack.cloud " >> /etc/hosts
    - docker pull localstack/localstack:latest
    - docker-compose -f localstack.compose up -d
    - aws configure set aws_access_key_id "test" && aws configure set aws_secret_access_key "test" && aws configure set region "eu-west-1" && aws configure set output "json"
    - ./scripts/localstack-deploy.sh



deploy-staging:
  stage: build-test-deploy
  variables:
    ENV: staging
  needs:
    - unit-test
    - acceptance-test
    - build
  dependencies:
    - build
  before_script:
    - apk update
    - apk add --update gcc musl-dev linux-headers py3-pip python3 python3-dev npm go
    - npm install -g aws-cdk-local aws-cdk
    - python3 -m pip install localstack awscli
  script:
    - ./scripts/deploy.sh

deploy-prod:
  stage: build-test-deploy
  variables:
    ENV: production
  needs:
    - build-prod
    - unit-test
    - acceptance-test
    - deploy-staging
  dependencies:
    - build-prod
  before_script:
    - apk update
    - apk add --update gcc musl-dev linux-headers py3-pip python3 python3-dev npm go
    - npm install -g aws-cdk-local aws-cdk
    - python3 -m pip install localstack awscli
  script:
    - ./scripts/deploy.sh
  allow_failure: false
  rules:
    - when: manual
