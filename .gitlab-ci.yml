image: alpine:latest

stages:
  - build-test-deploy

build:
  image: golang:latest
  stage: build-test-deploy
  before_script:
    - apt update
    - apt install zip -y
  script:
    - ./scripts/build.sh
  artifacts:
    expire_in: 1 week
    paths:
      - internal/app/*/*.zip

unit-test:
  image: golang:latest
  stage: build-test-deploy
  before_script:
    - go install gotest.tools/gotestsum@latest
  script:
    - gotestsum --junitfile report.xml --format testname
  artifacts:
    when: always
    reports:
      junit: report.xml

acceptance-test:
  image: docker:20.10.16
  stage: build-test-deploy
  needs:
    - build
  services:
    - name: docker:20.10.16-dind
      alias: docker
      command: ["--tls=false"]
  before_script:
    - apk update
    - apk add --update gcc musl-dev linux-headers py3-pip python3 python3-dev npm
    - npm install -g aws-cdk-local aws-cdk
  script:
    - docker pull localstack/localstack:latest
    - dind_ip="$(getent hosts docker | cut -d' ' -f1)"
    - echo "${dind_ip} localhost.localstack.cloud " >> /etc/hosts
    - DOCKER_HOST="tcp://${dind_ip}:2375" localstack start -d
    - ./scripts/localstack-deploy.sh



deploy-staging:
  stage: build-test-deploy
  needs:
    - unit-test
    - acceptance-test
  script:
    - echo "Deployment to staging"

deploy-prod:
  stage: build-test-deploy
  needs:
    - unit-test
    - acceptance-test
    - deploy-staging
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  environment: production
  allow_failure: false
  rules:
    - when: manual
